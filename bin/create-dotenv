#!/bin/bash

if [ -f .env ]; then
    echo "Skipping generating .env file because it already exists."
else
    cat <<-EOF > .env
		# Used to identify the client (sent in request headers)
		CLIENT_ID=harmony-in-a-box

		# Random string used to sign cookies.
		COOKIE_SECRET=$(openssl rand -hex 128)

		# Random string used for encrypting and decrypting Earthdata login tokens
		# sent to backend services
		SHARED_SECRET_KEY=$(openssl rand -hex 16)

		# Earthdata Login UAT credentials, used to create a .netrc for notebooks Dockerfile
		NB_EDL_USERNAME=
		NB_EDL_PASSWORD=

EOF
    cat <<-PROMPT_EDL
    Harmony can optionally use a user created Earthdata Login (EDL) client application to enable access
    to administrative routes such as deployment endpoints as well as directly accessing logs from the
    workflow-ui. These features are not generally useful for locally testing services, and so creation
    of an EDL client is not necessary. To simplify getting started you can instead provide an EDL token
    that will be used.

PROMPT_EDL
    if [ "$EXEC_CONTEXT" != "workflow" ]; then
        read -p "To provide an EDL client application respond 'y', otherwise to supply just an EDL token hit <Enter>: " USE_EDL_CLIENT_APP
    else
        USE_EDL_CLIENT_APP="y"
    fi
    if [ "${USE_EDL_CLIENT_APP}" != "y" ]; then
      read -s -p "EDL token to use for authentication (obtained using the Generate Token functionality from https://uat.urs.earthdata.nasa.gov/profile): " EDL_TOKEN
      echo "# Note that EDL tokens expire. If the token is no longer valid obtain a new one from https://uat.urs.earthdata.nasa.gov/profile" >> .env
      echo "EDL_TOKEN=$EDL_TOKEN" >> .env
      echo "USE_EDL_CLIENT_APP=false" >> .env
    else
      echo "# See the \"OAuth 2 (Earthdata Login)\" section in the env-defaults file" >> .env
      echo "# Contact a harmony developer if unsure what values to use" >> .env
      # prompt for the users EDL app credentials
      read -p "EDL Application Client ID: " OAUTH_CLIENT_ID
      read -s -p "EDL Application UID: " OAUTH_UID
      echo ""
      read -s -p "EDL Application Password: " OAUTH_PASSWORD
      echo ""
      cat <<-OAUTH_EOF >> .env
OAUTH_CLIENT_ID=$OAUTH_CLIENT_ID
OAUTH_UID=$OAUTH_UID
OAUTH_PASSWORD=$OAUTH_PASSWORD
OAUTH_EOF
    fi

    if [ "$EXEC_CONTEXT" != "workflow" ]; then
        echo ""
        # prompt for LOCALLY_DEPLOYED_SERVICES
        echo "Enter services to deploy (comma separated list)."
        read -p "Hit <Enter> to use the default services: " LOCALLY_DEPLOYED_SERVICES

        # Add locally LOCALLY_DEPLOYED_SERVICES if it is defined (not zero length)
        if [ ! -z "${LOCALLY_DEPLOYED_SERVICES}" ]; then
            echo -e "\nLOCALLY_DEPLOYED_SERVICES=${LOCALLY_DEPLOYED_SERVICES}\n" >> .env
        fi

        OS=`uname`
        if [ "Linux" = "$OS" ]; then
            echo -e "\n# Detected running on Linux so setting Linux specific env" >> .env
            echo "CALLBACK_URL_ROOT=http://localhost:3001" >> .env
            echo "BACKEND_HOST=localhost" >> .env
            echo "KUBE_CONTEXT=minikube" >> .env
        fi
    else
        echo -e "\nLOCALLY_DEPLOYED_SERVICES=harmony-service-example\n" >> .env
    fi

fi
